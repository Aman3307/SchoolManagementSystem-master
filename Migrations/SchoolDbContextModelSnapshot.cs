// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolManagementSystem.Data;

namespace SchoolManagementSystem.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    partial class SchoolDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SchoolManagementSystem.Models.Admin.ClassAttendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Absent")
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Present")
                        .HasColumnType("int");

                    b.Property<int>("TotalStudents")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateOnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttendanceId");

                    b.ToTable("ClassAttendance");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Admin.ClassTeacher", b =>
                {
                    b.Property<int>("ClassTeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateOnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassTeacherId");

                    b.ToTable("ClassTeacher");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Admin.SectionAttendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Absent")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Present")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("TotalStudents")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateOnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttendanceId");

                    b.ToTable("SectionAttendance");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Admin.SectionTeacher", b =>
                {
                    b.Property<int>("SectionTeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateOnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectionTeacherId");

                    b.ToTable("SectionTeacher");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Admin.StaffAttendance", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusOnDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.ToTable("StaffAttendance");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Admin.StaffDetails", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.ToTable("StaffDetails");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Admin.SubjectTeacher", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateOnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.ToTable("SubjectTeacher");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Cashier.ApprovalOfFees", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("FeesId")
                        .HasColumnType("int");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RemainingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("UTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("ApprovalOfFees");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Cashier.GenerateFeesForStudent", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrentMonthFees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FeesId")
                        .HasColumnType("int");

                    b.Property<decimal>("LastRemaining")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalFees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("GenerateFeesForStudent");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Cashier.Revenue", b =>
                {
                    b.Property<int>("RevenueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("LoanPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LoanTaken")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MonthName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RevenueGenerated")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RevenueReceived")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RevenueSpent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RevenueUptoWeek")
                        .HasColumnType("int");

                    b.Property<decimal>("RevenueYetToReceived")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("RevenueId");

                    b.ToTable("Revenue");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Cashier.StaffSalary", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("AdvancePaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaidOnDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PaidUptoMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreviousRemaining")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RemainingThisMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.ToTable("StaffSalary");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Common.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClassTeacherId")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfSections")
                        .HasColumnType("int");

                    b.Property<int?>("TotalStudents")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateOnDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassId");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Common.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("SectionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SectionTeacherId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalStudents")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateOnDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectionId");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Common.StudentDetails", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FatherContactDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGuardianContactDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGuardianName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGuardianRelation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherContactDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("StudentDetails");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Common.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("JwtToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Common.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Student.ComplainByStudent", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("ComplainAgainst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedByStudentId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStudentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId");

                    b.ToTable("ComplainByStudent");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Student.FeesUpdateByStudent", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<decimal>("PaidFees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RemainingFees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UTRNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedByStudentId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStudentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId");

                    b.ToTable("FeesUpdateByStudent");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Teacher.HwCw", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("Cw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateOnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HwCw");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Teacher.StudentAchievement", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Achievement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateOnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("StudentAchievement");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Teacher.StudentAttendance", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("StatusOnDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateOnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("StudentAttendance");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Teacher.StudentMarks", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Additional")
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("Computer")
                        .HasColumnType("int");

                    b.Property<int>("English")
                        .HasColumnType("int");

                    b.Property<int>("Hindi")
                        .HasColumnType("int");

                    b.Property<int>("MarksScored")
                        .HasColumnType("int");

                    b.Property<int>("Maths")
                        .HasColumnType("int");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Science")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("SocialStudies")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalMarks")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateOnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("StudentMarks");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Teacher.StudentRemarks", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateOnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedByStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("StudentRemark");
                });

            modelBuilder.Entity("SchoolManagementSystem.Models.Common.User", b =>
                {
                    b.HasOne("SchoolManagementSystem.Models.Common.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });
#pragma warning restore 612, 618
        }
    }
}
